{"version":3,"sources":["components/question/Question.js","components/answers/Answer.js","components/QuizMain.js","App.js","reportWebVitals.js","index.js"],"names":["Question","props","Answer","answers","Object","keys","answer","map","qAnswer","i","className","correctAnswer","clickedAnswer","onClick","checkAnswer","disabled","Quiz","state","questions","1","2","3","correctAnswers","step","score","setState","nextStep","this","length","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAQeA,EALE,SAACC,GACd,OACI,6BAAKA,EAAMD,YCiCJE,G,MAlCA,SAAED,GAEb,IAAIE,EAAUC,OAAOC,KAAKJ,EAAMK,QAC/BC,KAAI,SAACC,EAAQC,GAAT,OACD,oBACIC,UAEIT,EAAMU,gBAAkBH,EACpB,UACAP,EAAMW,gBAAkBJ,EACxB,YAAc,GAEtBK,QAAU,kBAAMZ,EAAMa,YAAYN,IARtC,SAUKP,EAAMK,OAAOE,IADTA,MAIb,OACI,qCACA,oBAAIO,WAAUd,EAAMW,cAA+BF,UAAU,UAA7D,SACKP,IAED,8BAEQF,EAAMU,cACN,kBACAV,EAAMW,cAAgB,oBAAuB,UCvB5CI,G,kNAGjBC,MAAQ,CACJC,UAAW,CACPC,EAAG,sDACHC,EAAG,kCACHC,EAAG,wCAEPlB,QAAS,CACLgB,EAAG,CACCA,EAAG,UACHC,EAAG,cACHC,EAAG,aAEPD,EAAG,CACCD,EAAG,SACHC,EAAG,SACHC,EAAG,YAEPA,EAAG,CACCF,EAAG,UACHC,EAAG,OACHC,EAAG,WAGXC,eAAgB,CACZH,EAAG,IACHC,EAAG,IACHC,EAAG,KAEPV,cAAe,EACfC,cAAe,EACfW,KAAM,EACNC,MAAO,G,EAEXV,YAAc,SAAAR,GAAW,IAAD,EACqB,EAAKW,MAAtCK,EADY,EACZA,eAAgBC,EADJ,EACIA,KAAOC,EADX,EACWA,MAC3BlB,IAAWgB,EAAeC,GAC1B,EAAKE,SAAS,CACVD,MAAOA,EAAQ,EACfb,cAAeW,EAAeC,GAC9BX,cAAcN,IAGlB,EAAKmB,SAAS,CACVd,cAAe,EACfC,cAAeN,K,EAI3BoB,SAAW,SAACH,GACR,EAAKE,SAAS,CACVF,KAAMA,EAAO,EACbZ,cAAe,EACfC,cAAe,K,4CAGvB,WAAU,IAAD,SACmEe,KAAKV,MAAvEC,EADD,EACCA,UAAWf,EADZ,EACYA,QAASQ,EADrB,EACqBA,cAAeC,EADpC,EACoCA,cAAeW,EADnD,EACmDA,KAAMC,EADzD,EACyDA,MAC9D,OACI,qBAAKd,UAAU,UAAf,SACKa,GAAQnB,OAAOC,KAAKa,GAAWU,OAC/B,qCACD,cAAC,EAAD,CACI5B,SAAUkB,EAAUK,KACxB,cAAC,EAAD,CACIjB,OAAQH,EAAQoB,GAChBA,KAAMA,EACNT,YAAaa,KAAKb,YAClBH,cAAeA,EACfC,cAAeA,IACnB,wBAAQF,UAAU,WACdK,WACIH,GAAiBR,OAAOC,KAAKa,GAAWU,QAAUL,GAGtDV,QAAS,kBAAM,EAAKa,SAASH,IALjC,qBAUA,sBAAKb,UAAU,YAAf,UACI,8DACA,gDAAmBc,EAAnB,OAA8BpB,OAAOC,KAAKa,GAAWU,UACrD,mD,GArFcC,c,MCKnBC,MARf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.582b080f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Question.css';\r\n\r\nconst Question = (props ) => {\r\n    return (\r\n        <h1>{props.Question}</h1>\r\n    );\r\n}\r\nexport default Question;","import React from 'react';\r\nimport './Answer.css';\r\n\r\n\r\nconst Answer = ( props ) =>\r\n{\r\n    let answers = Object.keys(props.answer)\r\n    .map((qAnswer,i) => (\r\n        <li\r\n            className=\r\n            {\r\n                props.correctAnswer === qAnswer ?\r\n                    'correct' : \r\n                    props.clickedAnswer === qAnswer ?\r\n                    'incorrect' : '' \r\n            }\r\n            onClick ={() => props.checkAnswer(qAnswer)}\r\n            key={qAnswer}>\r\n            {props.answer[qAnswer]}\r\n            </li>\r\n            ));\r\n    return (\r\n        <>\r\n        <ul disabled={props.clickedAnswer ? true : false } className=\"Answers\">\r\n            {answers}\r\n            </ul>\r\n            <div>\r\n                {\r\n                    props.correctAnswer ?\r\n                    \"Correct answer!\" :\r\n                    props.clickedAnswer ? 'Incorrect Answer!' :  ''\r\n                }\r\n            </div>\r\n            </>\r\n        \r\n    );\r\n}\r\n\r\nexport default Answer;\r\n","import React, { Component } from \"react\";\r\nimport Question from \"./question/Question\";\r\nimport Answer from \"./answers/Answer\";\r\nimport './QuizMain.css';\r\n\r\n\r\n\r\nexport default class Quiz extends Component{\r\n\r\n //initiating the state\r\n    state = {\r\n        questions: {\r\n            1: 'What US  city is known as the \"birthplace of jazz\"?',\r\n            2: 'What is the capital of greece\"?',\r\n            3: 'what planet gave birth to superman\"?',\r\n        },\r\n        answers: {\r\n            1: {\r\n                1: 'Chicago',\r\n                2: 'New Orleans',\r\n                3: ' New York'\r\n            },\r\n            2: {\r\n                1: 'Athens',\r\n                2: 'Patras',\r\n                3: 'Kalamata'\r\n            },\r\n            3: {\r\n                1: 'krypton',\r\n                2: 'Mars',\r\n                3: 'Satrun'\r\n            }\r\n        },\r\n        correctAnswers: {\r\n            1: '2',\r\n            2: '1',\r\n            3: '1',\r\n        },\r\n        correctAnswer: 0,\r\n        clickedAnswer: 0,\r\n        step: 1,\r\n        score: 0\r\n    }\r\n    checkAnswer = answer => {\r\n        const { correctAnswers, step,  score } = this.state;\r\n        if (answer === correctAnswers[step]) {\r\n            this.setState({\r\n                score: score + 1,\r\n                correctAnswer: correctAnswers[step],\r\n                clickedAnswer:answer\r\n            });\r\n        } else {\r\n            this.setState({\r\n                correctAnswer: 0,\r\n                clickedAnswer: answer\r\n            });\r\n        }\r\n    }\r\n    nextStep = (step) => {\r\n        this.setState({\r\n            step: step + 1,\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0\r\n        });\r\n    }\r\n    render() {\r\n        let { questions, answers, correctAnswer, clickedAnswer, step ,score } = this.state;\r\n        return (\r\n            <div className=\"Content\">\r\n                {step <= Object.keys(questions).length?\r\n                (<>\r\n                <Question\r\n                    Question={questions[step]} />\r\n                <Answer\r\n                    answer={answers[step]}\r\n                    step={step}\r\n                    checkAnswer={this.checkAnswer}\r\n                    correctAnswer={correctAnswer}\r\n                    clickedAnswer={clickedAnswer} />\r\n                <button className=\"NextStep\"\r\n                    disabled={\r\n                        clickedAnswer && Object.keys(questions).length >= step\r\n                            ? false : true\r\n                    }\r\n                    onClick={() => this.nextStep(step)}\r\n                >\r\n                    Next\r\n                    </button>\r\n                </>) : (\r\n                <div className=\"finalPage\">\r\n                    <h1>You Have completed the quiz!</h1>\r\n                    <p>Your score is :{score} of {Object.keys(questions).length}</p>\r\n                    <p>Thankyou!</p>\r\n                </div>\r\n                ) \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\nimport Quiz from \"./components/QuizMain\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quiz/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}